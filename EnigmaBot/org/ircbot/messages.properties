HELP=report, time, tell, msgs, seen, spell, define, get (EGML), wiki, bug, \
     gcc/g++/geordi/clang, <repo><cmd>: {e l jdi je jeie js} \
     { rev/msg url log grep[i] diff age svn } e.g. !erev HEAD^^

REPORT = {0} is alive and reporting for duty!

BUG_INFO = LGM bugs/features: {0} || All other bugs/features: {1}
BUG_ALL = http://enigma-dev.org/tracker/
BUG_LGM = https://github.com/IsmAvatar/LateralGM/issues

TELL_NEED_CHANNEL = You must join {0} before you can use the private version of this command.
TELL_DONE = {0} will be informed next time he/she joins.

GEORDI_NO_PRIVMSG = These commands can only be used from {0}. \
                    Why not try private messaging geordi/clang directly?

#Git Command output
GIT_AGE_0 = 0 - That is the latest revision
GIT_SVN_BAD_NUMBER = Not an svn revision
GIT_SVN_OVERFLOW = Repository not THAT old! {0} is the oldest.
GIT_SVN_SAFETY_OOB = No.
GIT_FILE_NOT_FOUND = File/directory not found in trunk. No regex matches.
GIT_FILE_BAD_REGEX = lrn2regex
GIT_GREP_NONE = No results found
GIT_GREP_INFO = {0} -- AND {1} MORE (!grepnext)

#Git Generic errors
GIT_NOT_READY = Try again in a moment, still setting stuff up
GIT_PRIOR_FAIL = Yeah... about that...
GIT_HEAD_NULL = Owe - Head's null, apparently.
GIT_INCORRECT_OBJECT_TYPE = Incorrect object type ({1})
GIT_REVISION_SYNTAX = Bad revision syntax
GIT_RESOLVE_NULL = No such revision

#Help
HELP_AGE = !<repo>age <revision> - Tells how many revisions have passed since the specified rev (use 'null' for the repo age)
HELP_SVN = !<repo>svn <svn_revision> - Approximately converts an SVN revision to a Git revision
HELP_FILE = !{0} <file_regex> - Locates a file in {1}
HELP_TELL = !tell <user> <message> - Leaves a message for the next time the user logs in (assuming they are offline). Alternatively, you can use Memoserv.

UNKNOWN = Unknown command: {0}...